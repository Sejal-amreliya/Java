Given a string s, find the length of the longest substring without repeating characters.

 

Example 1:

Input: s = "abcabcbb"
Output: 3
Explanation: The answer is "abc", with the length of 3.
Example 2:

Input: s = "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.


class Solution {
    public int lengthOfLongestSubstring(String s) {
        Set<Character> st=new HashSet<>();
        int ans=0;
        int i=0;
        int j=0;
        while(i<s.length() && j< s.length())
        {
            
            if(!st.contains(s.charAt(j)))
            {
                st.add(s.charAt(j));
                j++;
                ans=Math.max(ans,j-i);
            }
            else
            {
                st.remove(s.charAt(i));
                i++;
            }
        }
        return ans;
    }
}