import java.io.*;
import java.util.*;

class Main
{   
     
    public static void main(String[] args)
    {
      int arr[] = {1,3,1,4};
      int n=arr.length;
      Arrays.sort(arr);
      int repeat=0,miss=0;
      for(int i=0;i<n;++i)
      {
          if(i == n-1)
          {
              break;
          }
          if(arr[i]==arr[i+1])
          {
              repeat=arr[i];
          }
          if((arr[i+1]-arr[i])!=1)
          {
              miss=i+1;
          }
      }
      System.out.println("Repeating Element:= "+repeat);
      System.out.print("Missing Element:= "+miss);
    } 
}

TIME COMPLEXITY == O(NLOGN)
SPACE COMPLEXITY == O(1)


*******************************************************************************************************************************************************************888

import java.io.*;
import java.util.*;

class Main
{   
     
    
class GFG {
 
    static void printTwoElements(int arr[], int size)
    {
        int i;
        System.out.print("The repeating element is ");
 
        for (i = 0; i < size; i++) {
            int abs_val = Math.abs(arr[i]);
            if (arr[abs_val - 1] > 0)
                arr[abs_val - 1] = -arr[abs_val - 1];
            else
                System.out.println(abs_val);
        }
 
        System.out.print("and the missing element is ");
        for (i = 0; i < size; i++) {
            if (arr[i] > 0)
                System.out.println(i + 1);
        }
    }
 
    // Driver code
    public static void main(String[] args)
    {
        int arr[] = { 7, 3, 4, 5, 5, 6, 2 };
        int n = arr.length;
        printTwoElements(arr, n);
    }
}
 TIME COMPLEXITY=O(N)
Space Complexity =O(1)