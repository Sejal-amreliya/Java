class Solution {
    public int findMin(int[] nums) {
        if(nums.length==1)
            return nums[0];
        int start=0;
        int end=nums.length-1;
        if(nums[0]<nums[end])
            return nums[0];
        
        while(start<=end)
        {
            int mid=(start+end)/2;
            if(start < mid && nums[mid] < nums[mid-1])
            {
                return nums[mid];
            }
            else if(end > mid && nums[mid] > nums[mid+1])
            {
                return nums[mid+1];
            }
            else if(nums[end] > nums[mid])
            {
                end= mid-1;
            }
            else
            {
                start = mid+1;
            }
        }
        return -1;
    }
}



Example 1:

Input: nums = [3,4,5,1,2]
Output: 1
Explanation: The original array was [1,2,3,4,5] rotated 3 times.
Example 2:

Input: nums = [4,5,6,7,0,1,2]
Output: 0
Explanation: The original array was [0,1,2,4,5,6,7] and it was rotated 4 times.
Example 3:

Input: nums = [11,13,15,17]
Output: 11
Explanation: The original array was [11,13,15,17] and it was rotated 4 times. 