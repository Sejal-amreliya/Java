import java.io.*;
import java.util.*;
class Main
{
    public static Node middle(Node head)
    {
        Node s=head;
        Node f=head;
        while(f.next != null && f.next.next != null)
        {
            s=s.next;
            f=f.next.next;
        }
        return s;
    }
    public static Node mergedTwoLL(Node l1,Node l2)
    {
        if(l1 == null || l2 == null)
            return l1 != null ? l1 : l2;
        Node c1=l1;
        Node c2=l2;
        Node temp=new Node(-1);
        Node prev=temp;
        while(c1 != null && c2 != null)
        {
            if(c1.x < c2.x)
            {
                prev.next=c1;
                c1=c1.next;
            }
            else
            {
                prev.next=c2;
                c2=c2.next;
            }
            prev = prev.next;
        }
        prev.next = c1 != null ? c1 :c2;
        return temp.next;
    }
    public static Node mergedLL(Node head)
    {
        if(head  == null || head.next == null)
        {
            return head;
        }
        Node mid=middle(head);
        Node nhead=mid.next;
        mid.next=null;
        Node l1=mergedLL(head);
        Node l2=mergedLL(nhead);
        return mergedTwoLL(l1,l2);
    }
    public static void printl(Node head)
    {
        while(head != null)
        {
            System.out.print(head.x+" ");
            head=head.next;
        }
        System.out.println();
    }
    public static void main(String[] args)
    {
        Node head=new Node(2);
        head.next=new Node(45);
        head.next.next=new Node(4);
        head.next.next.next=new Node(1);
        head.next.next.next.next=new Node(26);
        head.next.next.next.next.next=new Node(3);
        printl(head);
        Node head1=mergedLL(head);
        printl(head1);
    }
}
class Node
{
    int x;
    Node next;
    Node(int x)
    {
        this.x=x;
        this.next=next;
    }
}